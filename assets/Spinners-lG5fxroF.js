import{_ as g,c as _,w as o,d as n,e as l,f as s,g as r,a as w}from"./index-BoxxoNe6.js";const y={};function C(b,e){const m=l("DocsComponents"),i=l("CCardHeader"),t=l("CSpinner"),a=l("DocsExample"),d=l("CCardBody"),u=l("CCard"),p=l("CCol"),c=l("CButton"),f=l("CRow");return w(),_(f,null,{default:o(()=>[n(p,{xs:12},{default:o(()=>[n(m,{href:"components/spinner.html"}),n(u,{class:"mb-4"},{default:o(()=>[n(i,null,{default:o(()=>[...e[0]||(e[0]=[s("strong",null,"Vue Spinner",-1),r(),s("small",null,"Border",-1)])]),_:1}),n(d,null,{default:o(()=>[e[1]||(e[1]=s("p",{class:"text-body-secondary small"}," Use the border spinners for a lightweight loading indicator. ",-1)),n(a,{href:"components/spinner.html"},{default:o(()=>[n(t)]),_:1}),e[2]||(e[2]=s("p",{class:"text-body-secondary small"},[r(" The border spinner uses "),s("code",null,"currentColor"),r(" for its "),s("code",null,"border-color"),r(". You can use any of our text color utilities on the standard spinner. ")],-1)),n(a,{href:"components/spinner.html#colors"},{default:o(()=>[n(t,{color:"primary"}),n(t,{color:"secondary"}),n(t,{color:"success"}),n(t,{color:"danger"}),n(t,{color:"warning"}),n(t,{color:"info"}),n(t,{color:"light"}),n(t,{color:"dark"})]),_:1})]),_:1})]),_:1})]),_:1}),n(p,{xs:12},{default:o(()=>[n(u,{class:"mb-4"},{default:o(()=>[n(i,null,{default:o(()=>[...e[3]||(e[3]=[s("strong",null,"Vue Spinner",-1),r(),s("small",null,"Growing",-1)])]),_:1}),n(d,null,{default:o(()=>[e[4]||(e[4]=s("p",{class:"text-body-secondary small"}," If you don'tfancy a border spinner, switch to the grow spinner. While it doesn't technically spin, it does repeatedly grow! ",-1)),n(a,{href:"components/spinner.html#growing-spinner"},{default:o(()=>[n(t,{variant:"grow"})]),_:1}),e[5]||(e[5]=s("p",{class:"text-body-secondary small"},[r(" Once again, this spinner is built with "),s("code",null,"currentColor"),r(", so you can easily change its appearance. Here it is in blue, along with the supported variants. ")],-1)),n(a,{href:"components/spinner.html#growing-spinner"},{default:o(()=>[n(t,{color:"primary",variant:"grow"}),n(t,{color:"secondary",variant:"grow"}),n(t,{color:"success",variant:"grow"}),n(t,{color:"danger",variant:"grow"}),n(t,{color:"warning",variant:"grow"}),n(t,{color:"info",variant:"grow"}),n(t,{color:"light",variant:"grow"}),n(t,{color:"dark",variant:"grow"})]),_:1})]),_:1})]),_:1})]),_:1}),n(p,{xs:12},{default:o(()=>[n(u,{class:"mb-4"},{default:o(()=>[n(i,null,{default:o(()=>[...e[6]||(e[6]=[s("strong",null,"Vue Spinner",-1),r(),s("small",null,"Size",-1)])]),_:1}),n(d,null,{default:o(()=>[e[7]||(e[7]=s("p",{class:"text-body-secondary small"},[r(" Add "),s("code",null,'size="sm"'),r(" property to make a smaller spinner that can quickly be used within other components. ")],-1)),n(a,{href:"components/spinner.html#size"},{default:o(()=>[n(t,{size:"sm"}),n(t,{size:"sm",variant:"grow"})]),_:1})]),_:1})]),_:1})]),_:1}),n(p,{xs:12},{default:o(()=>[n(u,{class:"mb-4"},{default:o(()=>[n(i,null,{default:o(()=>[...e[8]||(e[8]=[s("strong",null,"Vue Spinner",-1),r(),s("small",null,"Buttons",-1)])]),_:1}),n(d,null,{default:o(()=>[e[11]||(e[11]=s("p",{class:"text-body-secondary small"}," Use spinners within buttons to indicate an action is currently processing or taking place. You may also swap the text out of the spinner element and utilize button text as needed. ",-1)),n(a,{href:"components/spinner.html#buttons"},{default:o(()=>[n(c,{disabled:""},{default:o(()=>[n(t,{as:"span",size:"sm","aria-hidden":"true"})]),_:1}),n(c,{disabled:""},{default:o(()=>[n(t,{as:"span",size:"sm","aria-hidden":"true"}),e[9]||(e[9]=r(" Loading... ",-1))]),_:1})]),_:1}),n(a,{href:"components/spinner.html#buttons"},{default:o(()=>[n(c,{disabled:""},{default:o(()=>[n(t,{as:"span",size:"sm",variant:"grow","aria-hidden":"true"})]),_:1}),n(c,{disabled:""},{default:o(()=>[n(t,{as:"span",size:"sm",variant:"grow","aria-hidden":"true"}),e[10]||(e[10]=r(" Loading... ",-1))]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})}const x=g(y,[["render",C]]);export{x as default};
